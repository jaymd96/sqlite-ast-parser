[project]
name = "sqlite-ast-parser"
version = "0.1.0"
description = "A complete, production-ready SQLite SQL parser that returns detailed Abstract Syntax Trees (AST)"
authors = [{name = "James MD"}]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
keywords = ["sqlite", "sql", "parser", "ast", "abstract-syntax-tree", "lexer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Software Development :: Code Generators",
]

dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["sqlite_parser"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64", "win-64"]

[tool.pixi.pypi-dependencies]
sqlite-ast-parser = { path = ".", editable = true }
litterate = { git = "https://github.com/jaymd96/literate.git" }

[tool.pixi.dependencies]
python = ">=3.8"
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"

[tool.pixi.tasks]
test = "pytest tests/ -v"
test-all = "python tests/test_all_statements.py"
demo = "python examples/cli_demo.py"
example = "python examples/basic_usage.py"
